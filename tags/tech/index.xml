<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tech on fifteenbao</title>
    <link>http://localhost:1313/tags/tech/</link>
    <description>Recent content in Tech on fifteenbao</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 28 May 2023 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/tech/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>浅浅学习下可变字体</title>
      <link>http://localhost:1313/post/%E8%AE%BE%E8%AE%A1%E6%B5%85%E6%B5%85%E5%AD%A6%E4%B9%A0%E4%B8%8B%E5%8F%AF%E5%8F%98%E5%AD%97%E4%BD%93/</link>
      <pubDate>Sun, 28 May 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/%E8%AE%BE%E8%AE%A1%E6%B5%85%E6%B5%85%E5%AD%A6%E4%B9%A0%E4%B8%8B%E5%8F%AF%E5%8F%98%E5%AD%97%E4%BD%93/</guid>
      <description>&lt;p&gt;OpenType可变字体（英语：OpenType variable fonts）是字体格式OpenType在1.8版规范中引入的扩展规范，由苹果、微软、谷歌和Adobe联合开发，于2016年9月14日正式发布。&#xA;可变字体的优势：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;更小的文件体积&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;更自由的设计空间&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;更好的响应式网页适配性&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;微软可变字体简介：&lt;/strong&gt;&#xA;&lt;img src=&#34;https://design.google/_next/image?url=https%3A%2F%2Fstorage.googleapis.com%2Fgd-prod%2Fimages%2F9d4a467f-4854-439a-af13-9f8d70aa5edf.799a99c1196c2fd4.gif&amp;amp;w=3840&amp;amp;q=75&#34; alt=&#34;粗细和宽度两个轴&#34;&gt;&#xA;&lt;a href=&#34;https://learn.microsoft.com/en-us/typography/opentype/spec/otvaroverview&#34;&gt;https://learn.microsoft.com/en-us/typography/opentype/spec/otvaroverview&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h1 id=&#34;如何在web使用可变字体&#34;&gt;如何在web使用可变字体&lt;/h1&gt;&#xA;&lt;p&gt;&lt;strong&gt;可变字体（Variable fonts）&lt;/strong&gt; 是 OpenType 字体规范上的演进，它允许将同一字体的多个变体统合进单独的字体文件中。从而无需再将不同字宽、字重或不同样式的字体分割成不同的字体文件。你只需通过 CSS 与一行 @font-face 引用，即可获取包含在这个单一文件中的各种字体变体。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;@font-face {&#xA;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;&#xA;&lt;h2 id=&#34;静态字体和可变字体的差异&#34;&gt;静态字体和可变字体的差异&lt;/h2&gt;&#xA;&lt;h3 id=&#34;标准静态字体&#34;&gt;标准（静态）字体&lt;/h3&gt;&#xA;&lt;p&gt;过去，一个字体家族往往由大量独立字体文件组成，每个字体文件都代表某一特定的宽度/字重/样式的组合。因此你会看到有单独的字体文件叫做“Roboto Regular”、“Roboto Bold”，或是“Roboto Bold Italic”——这意味着你可能需要 20 或 30 个不同的字体文件才能算是有了一整个字体家族（对于有着不同宽度的大型字体来说，这个数量还要翻上几倍）。&lt;/p&gt;&#xA;&lt;p&gt;在这样的情景下，为了在一个单纯显示进行正文展示的页面中使用一个字体，你至少需要四个字体文件：常规、斜体、加粗、斜体加粗。如果你想添加更多的字重，比如让题注更轻或让额外强调的地方更重，意味着你需要更多文件。这就&lt;strong&gt;导致了更多大量 HTTP 请求的产生，同时也需要下载更多的数据&lt;/strong&gt;（通常每个文件至少有 20k 或更多）。&lt;/p&gt;&#xA;&lt;h3 id=&#34;可变字体&#34;&gt;可变字体&lt;/h3&gt;&#xA;&lt;p&gt;通过使用可变字体，所有这些情况的排列组合都可以被装进一个文件中。这个文件可能比常规的单个字体文件大一些，但通常情况下，都不会大于，并且常常是小于你因为要展示正文所需要下载的四个文件的尺寸总和。使用可变字体的优势是你可以直接使用所有可用的字重、宽度和样式的字体，而不必像过去一样仅仅受限于使用其中单独的某一种。一个可变字体文件可以包含传统静态字体系列中的所有字体。 就原始文件大小而言，这是一个直接的胜利，因为它紧凑地打包了整个字体系列。 &lt;strong&gt;替换的静态字体越多，节省的空间就越大&lt;/strong&gt;——对于非常大的字体系列，压缩甚至高达 70%。&lt;/p&gt;&#xA;&lt;p&gt;这允许使用常见的排版技术，例如在不同的字重中设置不同大小的标题，以便在每种大小下都具有更好的可读性，或者在数据密集展示时使用稍窄一点的字体宽度。相比之下，在杂志的印刷系统中，在整个出版物中使用 10-15 种或更多不同的字重和宽度组合是很典型的——这比目前在 web 上的典型样式提供了更广泛的样式范围 (或者仅&lt;strong&gt;从性能方面考虑确实很实用&lt;/strong&gt;)。&lt;/p&gt;&#xA;&lt;h3 id=&#34;关于字体系列字重和变体的说明&#34;&gt;关于字体系列，字重和变体的说明&lt;/h3&gt;&#xA;&lt;p&gt;您可能注意到，我们一直在讨论为每种权重和样式 (即粗体，斜体以及斜体加粗) 创建特定的字体文件，而不是依赖于浏览器来合成它们。这样做的原因，是大多数字体对于粗体和斜体都有非常特殊的设计，它们通常包含完全不同的字符 (例如，小写字母的“a”和“g”在斜体中常常是完全不同的)。在使用非可变字体时，为了最准确地反映字体设计，避免浏览器之间的差异以及它们如何合成或不合成不同的样式，在需要的地方加载特定的字体文件会更为准确。&lt;/p&gt;&#xA;&lt;p&gt;您可能还会发现一些可变字体分为两个文件：一个用于正体及其所有变体，另一个包含斜体变体。有时这样做是为了在不需要或不使用斜体的情况下减小整体文件大小。在所有情况下，仍然可以通过通用的 &lt;a href=&#34;https://developer.mozilla.org/zh-CN/docs/Web/CSS/font-family&#34;&gt;&lt;code&gt;font-family&lt;/code&gt;&lt;/a&gt; 名称链接它们，以便您可以使用相同的 font-family 和相应的 &lt;a href=&#34;https://developer.mozilla.org/zh-CN/docs/Web/CSS/font-style&#34;&gt;&lt;code&gt;font-style&lt;/code&gt;&lt;/a&gt; 来调用它们。&lt;/p&gt;&#xA;&lt;h2 id=&#34;可变轴&#34;&gt;可变轴&lt;/h2&gt;&#xA;&lt;p&gt;可变字体新格式的核心是&lt;strong&gt;可变轴&lt;/strong&gt;的概念，其描述了字体设计中某一特性的允许变化范围。&#xA;例如： “字重轴”描述了字体的粗细； “宽度轴”描述了字体的宽窄； “斜体轴”描述是否使用斜体字形并且可相应地开关； 等。&#xA;请注意，轴既可以是 &lt;strong&gt;范围选择&lt;/strong&gt; 又可以是 &lt;strong&gt;开关选择&lt;/strong&gt; 。&lt;/p&gt;</description>
    </item>
    <item>
      <title>在 Hugo 使用 Obsidian 编辑</title>
      <link>http://localhost:1313/post/tech%E7%94%A8-obsidian-%E7%BC%96%E8%BE%91-blog/</link>
      <pubDate>Wed, 24 May 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/tech%E7%94%A8-obsidian-%E7%BC%96%E8%BE%91-blog/</guid>
      <description>&lt;h1 id=&#34;导入&#34;&gt;导入&lt;/h1&gt;&#xA;&lt;p&gt;左侧边栏 &lt;code&gt;导入其他库 &amp;gt; 打开库文件&lt;/code&gt; ，导入 &lt;code&gt;hugo&lt;/code&gt;文件夹，其实只有 &lt;code&gt;/content/post&lt;/code&gt; 用得到，想直接使用hugo自定义的模版就导入所有目录。&lt;/p&gt;&#xA;&lt;h1 id=&#34;头字段-frontmatter&#34;&gt;头字段 FrontMatter&lt;/h1&gt;&#xA;&lt;p&gt;Markdown 最前面的头字段，类似于这样&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;title = &amp;#39;spf13-vim 3.0 release and new website&amp;#39;&#xA;date = &amp;#39;2023-05-24&amp;#39; &#xA;categories = [&amp;#39;Development&amp;#39;, &amp;#39;VIM&amp;#39;] &#xA;description = &amp;#39;spf13-vim is a cross platform distribution of vim plugins and resources for Vim.&amp;#39; &#xA;slug = &amp;#39;spf13-vim-3-0-release-and-new-website&amp;#39; &#xA;tags = [&amp;#39;.vimrc&amp;#39;, &amp;#39;plugins&amp;#39;, &amp;#39;spf13-vim&amp;#39;, &amp;#39;vim&amp;#39;] &#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;通常储模板文件存在 &lt;code&gt;/archetypes&lt;/code&gt; 中，用hugo命令 &lt;code&gt;hugo new posts/XXX.md&lt;/code&gt; 就会自动搜索和套用， &lt;a href=&#34;https://gohugo.io/content-management/front-matter/&#34;&gt;HUgo 官方教程&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;在 Obsidian &lt;code&gt;设置 &amp;gt; 核心插件 &amp;gt; 模版&lt;/code&gt; 添加  &lt;code&gt;/archetypes&lt;/code&gt; ，就可以在左侧边栏直接插入头字段了。&lt;/p&gt;&#xA;&lt;h1 id=&#34;其他设置&#34;&gt;其他设置&lt;/h1&gt;&#xA;&lt;p&gt;还有一些第三方插件，应该会更方便一些&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
